{
  "version": 3,
  "sources": ["../../date-fns/_lib/defaultOptions.js", "../../date-fns/startOfWeek.js"],
  "sourcesContent": ["let defaultOptions = {};\r\n\r\nexport function getDefaultOptions() {\r\n  return defaultOptions;\r\n}\r\n\r\nexport function setDefaultOptions(newOptions) {\r\n  defaultOptions = newOptions;\r\n}\r\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\r\nimport { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * The {@link startOfWeek} function options.\r\n */\r\n\r\n/**\r\n * @name startOfWeek\r\n * @category Week Helpers\r\n * @summary Return the start of a week for the given date.\r\n *\r\n * @description\r\n * Return the start of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The start of a week\r\n *\r\n * @example\r\n * // The start of a week for 2 September 2014 11:55:00:\r\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\r\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\r\n * //=> Mon Sep 01 2014 00:00:00\r\n */\r\nexport function startOfWeek(date, options) {\r\n  const defaultOptions = getDefaultOptions();\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const _date = toDate(date, options?.in);\r\n  const day = _date.getDay();\r\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\r\n\r\n  _date.setDate(_date.getDate() - diff);\r\n  _date.setHours(0, 0, 0, 0);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default startOfWeek;\r\n"],
  "mappings": ";;;;;AAAA,IAAI,iBAAiB,CAAC;AAEf,SAAS,oBAAoB;AAClC,SAAO;AACT;AAEO,SAAS,kBAAkB,YAAY;AAC5C,mBAAiB;AACnB;;;AC0BO,SAAS,YAAY,MAAM,SAAS;AAlC3C;AAmCE,QAAMA,kBAAiB,kBAAkB;AACzC,QAAM,gBACJ,mCAAS,mBACT,8CAAS,WAAT,mBAAiB,YAAjB,mBAA0B,iBAC1BA,gBAAe,kBACf,WAAAA,gBAAe,WAAf,mBAAuB,YAAvB,mBAAgC,iBAChC;AAEF,QAAM,QAAQ,OAAO,MAAM,mCAAS,EAAE;AACtC,QAAM,MAAM,MAAM,OAAO;AACzB,QAAM,QAAQ,MAAM,eAAe,IAAI,KAAK,MAAM;AAElD,QAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI;AACpC,QAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,SAAO;AACT;AAGA,IAAO,sBAAQ;",
  "names": ["defaultOptions"]
}
